不加数据增强
0.30  40层的情况下
id,value,val_acc,best_epoch,last_epoch
16,"tensor(0.8150, device='cuda:0', dtype=torch.float64)",0.8,207,308
17,"tensor(0.8090, device='cuda:0', dtype=torch.float64)",0.762,3,106
18,"tensor(0.7850, device='cuda:0', dtype=torch.float64)",0.77,61,162
19,"tensor(0.8030, device='cuda:0', dtype=torch.float64)",0.666,23,124
20,"tensor(0.8100, device='cuda:0', dtype=torch.float64)",0.764,3,243
21,"tensor(0.8190, device='cuda:0', dtype=torch.float64)",0.788,26,194
22,"tensor(0.8070, device='cuda:0', dtype=torch.float64)",0.788,47,148
23,"tensor(0.8180, device='cuda:0', dtype=torch.float64)",0.808,0,200
24,"tensor(0.8000, device='cuda:0', dtype=torch.float64)",0.8,99,456
25,"tensor(0.7910, device='cuda:0', dtype=torch.float64)",0.764,0,185
mean,std
"tensor(0.8057, dtype=torch.float64)","tensor(0.0112, dtype=torch.float64)"

0.30 k=8
id,value,val_acc,best_epoch,last_epoch
16,"tensor(0.8200, device='cuda:0', dtype=torch.float64)",0.768,297,399
17,"tensor(0.8170, device='cuda:0', dtype=torch.float64)",0.802,3,105
18,"tensor(0.8080, device='cuda:0', dtype=torch.float64)",0.794,17,122
19,"tensor(0.8080, device='cuda:0', dtype=torch.float64)",0.812,103,266
20,"tensor(0.8080, device='cuda:0', dtype=torch.float64)",0.804,99,201
21,"tensor(0.8100, device='cuda:0', dtype=torch.float64)",0.77,280,503
22,"tensor(0.8030, device='cuda:0', dtype=torch.float64)",0.788,317,418
23,"tensor(0.8170, device='cuda:0', dtype=torch.float64)",0.8200000000000001,82,183
24,"tensor(0.8100, device='cuda:0', dtype=torch.float64)",0.812,3,104
25,"tensor(0.8100, device='cuda:0', dtype=torch.float64)",0.8,0,101
mean,std
"tensor(0.8111, dtype=torch.float64)","tensor(0.0052, dtype=torch.float64)"

0.30 k=7
id,value,val_acc,best_epoch,last_epoch
16,"tensor(0.8150, device='cuda:0', dtype=torch.float64)",0.786,24,208
17,"tensor(0.8150, device='cuda:0', dtype=torch.float64)",0.782,10,206
18,"tensor(0.8060, device='cuda:0', dtype=torch.float64)",0.802,21,190
19,"tensor(0.8070, device='cuda:0', dtype=torch.float64)",0.804,37,202
20,"tensor(0.8160, device='cuda:0', dtype=torch.float64)",0.81,23,124
21,"tensor(0.8060, device='cuda:0', dtype=torch.float64)",0.8,137,238
22,"tensor(0.8140, device='cuda:0', dtype=torch.float64)",0.784,57,253
23,"tensor(0.8180, device='cuda:0', dtype=torch.float64)",0.784,82,202
24,"tensor(0.8120, device='cuda:0', dtype=torch.float64)",0.8,151,252
25,"tensor(0.8220, device='cuda:0', dtype=torch.float64)",0.812,216,392
mean,std
"tensor(0.8131, dtype=torch.float64)","tensor(0.0054, dtype=torch.float64)"

0.31 k=8
id,value,val_acc,best_epoch,last_epoch
16,"tensor(0.8110, device='cuda:0', dtype=torch.float64)",0.788,220,404
17,"tensor(0.8050, device='cuda:0', dtype=torch.float64)",0.788,103,205
18,"tensor(0.8050, device='cuda:0', dtype=torch.float64)",0.786,110,211
19,"tensor(0.8140, device='cuda:0', dtype=torch.float64)",0.786,62,264
20,"tensor(0.8160, device='cuda:0', dtype=torch.float64)",0.764,13,114
21,"tensor(0.8070, device='cuda:0', dtype=torch.float64)",0.802,133,235
22,"tensor(0.8100, device='cuda:0', dtype=torch.float64)",0.786,84,185
23,"tensor(0.8100, device='cuda:0', dtype=torch.float64)",0.812,187,288
24,"tensor(0.8150, device='cuda:0', dtype=torch.float64)",0.794,137,238
25,"tensor(0.8090, device='cuda:0', dtype=torch.float64)",0.794,3,163
mean,std
"tensor(0.8102, dtype=torch.float64)","tensor(0.0039, dtype=torch.float64)"

0.31 k=7
id,value,val_acc,best_epoch,last_epoch
16,"tensor(0.8180, device='cuda:0', dtype=torch.float64)",0.794,24,125
17,"tensor(0.8100, device='cuda:0', dtype=torch.float64)",0.8,4,154
18,"tensor(0.8170, device='cuda:0', dtype=torch.float64)",0.8160000000000001,144,245
19,"tensor(0.7980, device='cuda:0', dtype=torch.float64)",0.804,66,167
20,"tensor(0.8110, device='cuda:0', dtype=torch.float64)",0.792,51,270
21,"tensor(0.8040, device='cuda:0', dtype=torch.float64)",0.79,30,131
22,"tensor(0.8120, device='cuda:0', dtype=torch.float64)",0.794,23,124
23,"tensor(0.8090, device='cuda:0', dtype=torch.float64)",0.788,140,241
24,"tensor(0.8180, device='cuda:0', dtype=torch.float64)",0.782,62,163
25,"tensor(0.8050, device='cuda:0', dtype=torch.float64)",0.798,35,136
mean,std
"tensor(0.8102, dtype=torch.float64)","tensor(0.0066, dtype=torch.float64)"

0.29 k=7
id,value,val_acc,best_epoch,last_epoch
16,"tensor(0.8160, device='cuda:0', dtype=torch.float64)",0.794,24,175
17,"tensor(0.8060, device='cuda:0', dtype=torch.float64)",0.802,101,202
18,"tensor(0.8140, device='cuda:0', dtype=torch.float64)",0.798,2,241
19,"tensor(0.8090, device='cuda:0', dtype=torch.float64)",0.768,67,168
20,"tensor(0.8150, device='cuda:0', dtype=torch.float64)",0.786,2,204
21,"tensor(0.8100, device='cuda:0', dtype=torch.float64)",0.778,181,282
22,"tensor(0.8090, device='cuda:0', dtype=torch.float64)",0.804,373,474
23,"tensor(0.8100, device='cuda:0', dtype=torch.float64)",0.784,82,261
24,"tensor(0.8120, device='cuda:0', dtype=torch.float64)",0.79,3,104
25,"tensor(0.8150, device='cuda:0', dtype=torch.float64)",0.798,51,156
mean,std
"tensor(0.8116, dtype=torch.float64)","tensor(0.0033, dtype=torch.float64)"

0.41
id,value,val_acc,best_epoch,last_epoch
16,"tensor(0.8030, device='cuda:0', dtype=torch.float64)",0.788,149,318
17,"tensor(0.8210, device='cuda:0', dtype=torch.float64)",0.776,114,215
18,"tensor(0.8110, device='cuda:0', dtype=torch.float64)",0.788,145,246
19,"tensor(0.8160, device='cuda:0', dtype=torch.float64)",0.778,3,122
20,"tensor(0.8080, device='cuda:0', dtype=torch.float64)",0.806,2,104
21,"tensor(0.8110, device='cuda:0', dtype=torch.float64)",0.782,3,153
22,"tensor(0.8190, device='cuda:0', dtype=torch.float64)",0.794,3,104
23,"tensor(0.8070, device='cuda:0', dtype=torch.float64)",0.788,4,105
24,"tensor(0.8100, device='cuda:0', dtype=torch.float64)",0.762,266,367
25,"tensor(0.8160, device='cuda:0', dtype=torch.float64)",0.802,134,235
mean,std
"tensor(0.8122, dtype=torch.float64)","tensor(0.0057, dtype=torch.float64)"